{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/questions.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/reponses.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/grid-list\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/progress-spinner\";\nimport * as i8 from \"../reponses/reponses.component\";\nfunction QuestionsComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"mat-spinner\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction QuestionsComponent_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 3)(1, \"mat-card-title\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-card-content\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"La Question \", ctx_r1.question.id_question, \" :\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.question.libelle, \" \");\n  }\n}\nfunction QuestionsComponent_mat_grid_list_2_mat_grid_tile_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\");\n    i0.ɵɵelement(1, \"app-reponses\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const reponse_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"reponse\", reponse_r4);\n  }\n}\nfunction QuestionsComponent_mat_grid_list_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-list\", 4);\n    i0.ɵɵtemplate(1, QuestionsComponent_mat_grid_list_2_mat_grid_tile_1_Template, 2, 1, \"mat-grid-tile\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.reponses);\n  }\n}\nexport let QuestionsComponent = /*#__PURE__*/(() => {\n  class QuestionsComponent {\n    constructor(questionsService, route, reponsesService) {\n      this.questionsService = questionsService;\n      this.route = route;\n      this.reponsesService = reponsesService;\n      this.question = {};\n      this.reponses = [];\n      this.loading = false;\n    }\n    ngOnInit() {\n      this.loading = true;\n      const id = +(this.route.snapshot.paramMap.get('id') || 0);\n      this.questionsService.getQuestion(id).subscribe(question => {\n        this.question = question;\n        this.reponsesService.getReponses(id).subscribe(reponses => {\n          this.reponses = reponses;\n          this.loading = false;\n        });\n      });\n    }\n  }\n  QuestionsComponent.ɵfac = function QuestionsComponent_Factory(t) {\n    return new (t || QuestionsComponent)(i0.ɵɵdirectiveInject(i1.QuestionsService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ReponsesService));\n  };\n  QuestionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuestionsComponent,\n    selectors: [[\"app-questions\"]],\n    decls: 3,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [\"style\", \"text-align: center\", 4, \"ngIf\"], [\"cols\", \"2\", \"rowHeight\", \"2:1\", 4, \"ngIf\"], [2, \"text-align\", \"center\"], [\"cols\", \"2\", \"rowHeight\", \"2:1\"], [4, \"ngFor\", \"ngForOf\"], [3, \"reponse\"]],\n    template: function QuestionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, QuestionsComponent_ng_container_0_Template, 2, 0, \"ng-container\", 0);\n        i0.ɵɵtemplate(1, QuestionsComponent_mat_card_1_Template, 5, 2, \"mat-card\", 1);\n        i0.ɵɵtemplate(2, QuestionsComponent_mat_grid_list_2_Template, 2, 1, \"mat-grid-list\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.MatGridList, i5.MatGridTile, i6.MatCard, i6.MatCardContent, i6.MatCardTitle, i7.MatSpinner, i8.ReponsesComponent]\n  });\n  return QuestionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}